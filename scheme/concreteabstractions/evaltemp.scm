(define item-list-class (make-class (quote item-list) object-class (quote (item-vector num-items)) (quote (add display total-price delete choose empty?))))(define item-list? (class/predicate item-list-class))(define make-item-list (class/instantiator item-list-class))(define item-list/get-item-vector (class/getter item-list-class (quote item-vector)))(define item-list/set-item-vector! (class/setter item-list-class (quote item-vector)))(define item-list/get-num-items (class/getter item-list-class (quote num-items)))(define item-list/set-num-items! (class/setter item-list-class (quote num-items)))(define item-list/get-class (class/getter item-list-class (quote class)))(define item-list/set-class! (class/setter item-list-class (quote class)))(define item-list/add (class/method item-list-class (quote add)))(define item-list^add (class/non-overridable-method item-list-class (quote add)))(define item-list/display (class/method item-list-class (quote display)))(define item-list^display (class/non-overridable-method item-list-class (quote display)))(define item-list/total-price (class/method item-list-class (quote total-price)))(define item-list^total-price (class/non-overridable-method item-list-class (quote total-price)))(define item-list/delete (class/method item-list-class (quote delete)))(define item-list^delete (class/non-overridable-method item-list-class (quote delete)))(define item-list/choose (class/method item-list-class (quote choose)))(define item-list^choose (class/non-overridable-method item-list-class (quote choose)))(define item-list/empty? (class/method item-list-class (quote empty?)))(define item-list^empty? (class/non-overridable-method item-list-class (quote empty?)))(define item-list/init (class/method item-list-class (quote init)))(define item-list^init (class/non-overridable-method item-list-class (quote init)))(define item-list/describe (class/method item-list-class (quote describe)))(define item-list^describe (class/non-overridable-method item-list-class (quote describe)))